<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Payroll.Web</name>
    </assembly>
    <members>
        <member name="T:payroll.web.Controllers.LeaveController">
            <summary>
            API controller for managing employee leaves.
            </summary>
        </member>
        <member name="M:payroll.web.Controllers.LeaveController.#ctor(payroll.web.Data.PayrollDbContext,Microsoft.Extensions.Logging.ILogger{payroll.web.Controllers.LeaveController})">
            <summary>
            Initializes a new instance of the <see cref="T:payroll.web.Controllers.LeaveController"/> class.
            </summary>
            <param name="context">The database context.</param>
            <param name="logger">The logger instance.</param>
        </member>
        <member name="M:payroll.web.Controllers.LeaveController.GetLeaves">
            <summary>
            Retrieves all leaves.
            </summary>
            <returns>A list of leaves with employee and leave type details.</returns>
        </member>
        <member name="M:payroll.web.Controllers.LeaveController.GetLeave(System.Guid)">
            <summary>
            Retrieves a leave by ID.
            </summary>
            <param name="id">The ID of the leave.</param>
            <returns>The leave if found; otherwise, a 404 response.</returns>
        </member>
        <member name="M:payroll.web.Controllers.LeaveController.PostLeave(payroll.web.Controllers.LeavePostDto)">
            <summary>
            Creates a new leave.
            </summary>
            <param name="leaveDto">The leave data.</param>
            <returns>The created leave with a 201 response.</returns>
        </member>
        <member name="M:payroll.web.Controllers.LeaveController.PutLeave(System.Guid,payroll.web.Controllers.LeavePutDto)">
            <summary>
            Updates an existing leave.
            </summary>
            <param name="id">The ID of the leave to update.</param>
            <param name="leaveDto">The updated leave data.</param>
            <returns>The updated leave with a 200 response.</returns>
        </member>
        <member name="M:payroll.web.Controllers.LeaveController.DeleteLeave(System.Guid)">
            <summary>
            Deletes a leave by ID.
            </summary>
            <param name="id">The ID of the leave to delete.</param>
            <returns>A 204 response if successful; otherwise, a 404 or 500 response.</returns>
        </member>
        <member name="T:payroll.web.Controllers.LeavePostDto">
            <summary>
            DTO for creating a leave.
            </summary>
        </member>
        <member name="T:payroll.web.Controllers.LeavePutDto">
            <summary>
            DTO for updating a leave.
            </summary>
        </member>
        <member name="T:payroll.web.Controllers.LeaveTypeController">
            <summary>
            API controller for managing leave types.
            </summary>
        </member>
        <member name="M:payroll.web.Controllers.LeaveTypeController.#ctor(payroll.web.Data.PayrollDbContext,Microsoft.Extensions.Logging.ILogger{payroll.web.Controllers.LeaveTypeController})">
            <summary>
            Initializes a new instance of the <see cref="T:payroll.web.Controllers.LeaveTypeController"/> class.
            </summary>
            <param name="context">The database context.</param>
            <param name="logger">The logger instance.</param>
        </member>
        <member name="M:payroll.web.Controllers.LeaveTypeController.GetLeaveTypes">
            <summary>
            Retrieves all leave types.
            </summary>
            <returns>A list of leave types.</returns>
        </member>
        <member name="M:payroll.web.Controllers.LeaveTypeController.GetLeaveType(System.Guid)">
            <summary>
            Retrieves a leave type by ID.
            </summary>
            <param name="id">The ID of the leave type.</param>
            <returns>The leave type if found; otherwise, a 404 response.</returns>
        </member>
        <member name="M:payroll.web.Controllers.LeaveTypeController.PostLeaveType(payroll.web.Controllers.LeaveTypePostDto)">
            <summary>
            Creates a new leave type.
            </summary>
            <param name="leaveTypeDto">The leave type data.</param>
            <returns>The created leave type with a 201 response.</returns>
        </member>
        <member name="M:payroll.web.Controllers.LeaveTypeController.PutLeaveType(System.Guid,payroll.web.Controllers.LeaveTypePutDto)">
            <summary>
            Updates an existing leave type.
            </summary>
            <param name="id">The ID of the leave type to update.</param>
            <param name="leaveTypeDto">The updated leave type data.</param>
            <returns>The updated leave type with a 200 response.</returns>
        </member>
        <member name="M:payroll.web.Controllers.LeaveTypeController.DeleteLeaveType(System.Guid)">
            <summary>
            Deletes a leave type by ID.
            </summary>
            <param name="id">The ID of the leave type to delete.</param>
            <returns>A 204 response if successful; otherwise, a 404 or 500 response.</returns>
        </member>
        <member name="T:payroll.web.Controllers.LeaveTypePostDto">
            <summary>
            DTO for creating a leave type.
            </summary>
        </member>
        <member name="T:payroll.web.Controllers.LeaveTypePutDto">
            <summary>
            DTO for updating a leave type.
            </summary>
        </member>
        <member name="M:payroll.web.Data.PayrollDbContextExtensions.EndWorkArrangementAsync(payroll.web.Data.PayrollDbContext,System.Guid,System.DateTime,System.Nullable{System.Int32})">
            <summary>
            Ends an active work arrangement for an employee
            </summary>
        </member>
        <member name="M:payroll.web.Data.PayrollDbContextExtensions.CreateWorkArrangementAsync(payroll.web.Data.PayrollDbContext,payroll.web.Models.WorkArrangement)">
            <summary>
            Creates a new work arrangement, ending any existing active arrangement
            </summary>
        </member>
        <member name="M:payroll.web.Data.PayrollDbContextExtensions.GetWorkArrangementsByTypeAsync(payroll.web.Data.PayrollDbContext,System.Int32)">
            <summary>
            Gets work arrangements by arrangement type
            </summary>
        </member>
        <member name="M:payroll.web.Data.PayrollDbContextExtensions.GetWorkArrangementsByDateRangeAsync(payroll.web.Data.PayrollDbContext,System.DateTime,System.DateTime)">
            <summary>
            Gets work arrangements by date range
            </summary>
        </member>
        <member name="M:payroll.web.Data.PayrollDbContextExtensions.GetEmployeesWithoutWorkArrangementsAsync(payroll.web.Data.PayrollDbContext)">
            <summary>
            Gets employees without work arrangements
            </summary>
        </member>
        <member name="M:payroll.web.Data.PayrollDbContextExtensions.ValidateWorkArrangementAsync(payroll.web.Data.PayrollDbContext,payroll.web.Models.WorkArrangement)">
            <summary>
            Validates work arrangement data
            </summary>
        </member>
    </members>
</doc>
